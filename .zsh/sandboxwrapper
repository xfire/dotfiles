#
# Shell functions to act as wrapper for nkryptic's sandbox
# (http://wiki.github.com/nkryptic/sandbox)
#

#
# Setup:
#
#  1. Add a line like "export SANDBOX_HOME=$HOME/.sandboxes"
#     to your .bashrc.
#  2. Add a line like "source /path/to/this/file/sandboxwrapper"
#     to your .bashrc.
#  3. Run: source ~/.bashrc
#  4. Run: workon_sandbox
#  5. A list of environments, empty, is printed.
#  6. Run: mksandbox temp
#  7. Run: workon_sandbox
#  8. This time, the "temp" environment is included.
#  9. Run: workon_sandbox temp
# 10. The virtual environment is activated.
#

# Make sure there is a default value for SANDBOX_HOME.
# You can override this setting in your .bashrc.
if [ "$SANDBOX_HOME" = "" ]
then
    export SANDBOX_HOME="$HOME/.sandboxes"
fi

# Verify that the WORKON_HOME directory exists
function verify_sandbox_home () {
    if [ ! -d "$SANDBOX_HOME" ]
    then
        echo "ERROR: Virtual environments directory '$SANDBOX_HOME' does not exist."
        return 1
    fi
    return 0
}

# Verify that the requested environment exists
function verify_sandbox_environment () {
       typeset env_name="$1"
       if [ ! -d "$SANDBOX_HOME/$env_name" ]
    then
       echo "ERROR: Environment '$env_name' does not exist. Create it with 'mksandbox $env_name'."
       return 1
    fi
    return 0
}

# Create a new environment, in the SANDBOX_HOME.
#
# Usage: mksandbox [options] ENVNAME
# (where the options are passed directly to sandbox)
#
function mksandbox () {
    verify_sandbox_home
    (cd "$SANDBOX_HOME"; sandbox $*)
    workon_sandbox "${@:-1}"
}

# Remove an environment, in the SANDBOX_HOME.
function rmsandbox () {
    typeset env_name="$1"
    verify_sandbox_home
    env_dir="$SANDBOX_HOME/$env_name"
    if [ "$SANDBOX_ENV" == "$env_dir" ]
    then
        echo "ERROR: You cannot remove the active environment ('$env_name')."
        return 1
    fi
    rm -rf "$env_dir"
}

# List the available environments.
function show_sandbox_options () {
    verify_sandbox_home
	ls -H "$SANDBOX_HOME" | sort
}

# List or change working virtual environments
#
# Usage: workon_sandbox [environment_name]
#
function workon_sandbox () {
	typeset env_name="$1"
	if [ "$env_name" = "" ]
    then
        show_sandbox_options
        return 1
    fi

    verify_sandbox_home || return 1
    verify_sandbox_environment $env_name || return 1
    
    activate="$SANDBOX_HOME/$env_name/bin/activate_sandbox"
    if [ ! -f "$activate" ]
    then
        echo "ERROR: Environment '$SANDBOX_HOME/$env_name' does not contain an activate script."
        return 1
    fi
    
    source "$activate"

	return 0
}

#
# Set up tab completion.  (Adapted from Arthur Koziel's version at 
# http://arthurkoziel.com/2008/10/11/virtualenvwrapper-bash-completion/)
# 
_virtualenvs ()
{
    local cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "`show_sandbox_options`" -- ${cur}) )
}

complete -o default -o nospace -F _virtualenvs workon_sandbox
complete -o default -o nospace -F _virtualenvs rmsandbox
